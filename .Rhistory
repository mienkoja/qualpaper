#geom_vline(xintercept = med*0.621371, size = 1, colour=poc_colors[1]) +
geom_vline(data=mean_df
,aes(xintercept = means
,colour=Setting)
,size=1
,show_guide=TRUE) +
#geom_vline(xintercept = mn_gp*0.621371, size = 1, colour=poc_colors[3]) +
#geom_vline(xintercept = mn_kn*0.621371, size = 1, colour=poc_colors[2]) +
#geom_vline(xintercept = med*0.621371, size = 1, colour=poc_colors[1]) +
#geom_vline(xintercept = med_fc*0.621371, size = 1, colour=poc_colors[4]) +
#geom_vline(xintercept = med_gp*0.621371, size = 1, colour=poc_colors[4]) +
#geom_vline(xintercept = med_kn*0.621371, size = 1, colour=poc_colors[4]) +
annotate("text"
,x = mn_fc*0.621371+6
,y = .24
#,angle = 90
,label = "1"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[1]
,fontface="bold"
,size=6
) +
annotate("text"
,x = mn_gp*0.621371+6
,y = .24
#,angle = 90
,label = "2"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[2]
,fontface="bold"
,size=6
) +
annotate("text"
,x = mn_kn*0.621371-6
,y = .24
#,angle = 90
,label = "3"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[4]
,fontface="bold"
,size=6
) +
scale_colour_manual(name="Mean Distance by Care Setting"
,values=c(poc_colors[1:2], poc_colors[4])) +
#scale_fill_discrete(guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(text=element_text(size=26
,family="Frutiger LT Std 45 Light"
)
,axis.text.x=element_text(angle=90)
,legend.position=c(.275,.9)
,legend.justification=c(.27,.9)
,legend.text=element_text(color=c(poc_colors[1:2], poc_colors[4]))
)
ggplot(dist_d, aes(x=dist_m)) +
geom_histogram(aes(y=..count../sum(..count..))
,breaks=seq(from=0, to=600, by=5)
,colour="#294d64"
,fill="#294d64") +
scale_y_continuous(labels = percent) +
scale_x_continuous(breaks = c(seq(0, 100, 20), seq(100, 600, 200))) +
xlab("Miles from Removal Location") +
ylab("Percentage of Children") +
#geom_vline(xintercept = med*0.621371, size = 1, colour=poc_colors[1]) +
geom_vline(data=mean_df
,aes(xintercept = means
,colour=Setting)
,size=1
,show_guide=TRUE) +
#geom_vline(xintercept = mn_gp*0.621371, size = 1, colour=poc_colors[3]) +
#geom_vline(xintercept = mn_kn*0.621371, size = 1, colour=poc_colors[2]) +
#geom_vline(xintercept = med*0.621371, size = 1, colour=poc_colors[1]) +
#geom_vline(xintercept = med_fc*0.621371, size = 1, colour=poc_colors[4]) +
#geom_vline(xintercept = med_gp*0.621371, size = 1, colour=poc_colors[4]) +
#geom_vline(xintercept = med_kn*0.621371, size = 1, colour=poc_colors[4]) +
annotate("text"
,x = mn_fc*0.621371+6
,y = .24
#,angle = 90
,label = "1"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[1]
,fontface="bold"
,size=6
) +
annotate("text"
,x = mn_gp*0.621371+6
,y = .24
#,angle = 90
,label = "2"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[2]
,fontface="bold"
,size=6
) +
annotate("text"
,x = mn_kn*0.621371-6
,y = .24
#,angle = 90
,label = "3"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[4]
,fontface="bold"
,size=6
) +
scale_colour_manual(name="Mean Distance by Care Setting"
,values=c(poc_colors[1:2], poc_colors[4])) +
#scale_fill_discrete(guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(text=element_text(size=26
,family="Frutiger LT Std 45 Light"
)
,axis.text.x=element_text(angle=90)
,legend.position=c(.275,.95)
,legend.justification=c(.27,.95)
)
dev.off()
png(file="C:/Users/mienkoja/Dropbox/movement_blog/figure/hist.png", width=15, height = 12, units="in", res = 320)
ggplot(dist_d, aes(x=dist_m)) +
geom_histogram(aes(y=..count../sum(..count..))
,breaks=seq(from=0, to=600, by=5)
,colour="#294d64"
,fill="#294d64") +
scale_y_continuous(labels = percent) +
scale_x_continuous(breaks = c(seq(0, 100, 20), seq(100, 600, 200))) +
xlab("Miles from Removal Location") +
ylab("Percentage of Children") +
#geom_vline(xintercept = med*0.621371, size = 1, colour=poc_colors[1]) +
geom_vline(data=mean_df
,aes(xintercept = means
,colour=Setting)
,size=1
,show_guide=TRUE) +
#geom_vline(xintercept = mn_gp*0.621371, size = 1, colour=poc_colors[3]) +
#geom_vline(xintercept = mn_kn*0.621371, size = 1, colour=poc_colors[2]) +
#geom_vline(xintercept = med*0.621371, size = 1, colour=poc_colors[1]) +
#geom_vline(xintercept = med_fc*0.621371, size = 1, colour=poc_colors[4]) +
#geom_vline(xintercept = med_gp*0.621371, size = 1, colour=poc_colors[4]) +
#geom_vline(xintercept = med_kn*0.621371, size = 1, colour=poc_colors[4]) +
annotate("text"
,x = mn_fc*0.621371+6
,y = .24
#,angle = 90
,label = "1"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[1]
,fontface="bold"
,size=6
) +
annotate("text"
,x = mn_gp*0.621371+6
,y = .24
#,angle = 90
,label = "2"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[2]
,fontface="bold"
,size=6
) +
annotate("text"
,x = mn_kn*0.621371-6
,y = .24
#,angle = 90
,label = "3"
,family="Frutiger LT Std 45 Light"
,colour=poc_colors[4]
,fontface="bold"
,size=6
) +
scale_colour_manual(name="Mean Distance by Care Setting"
,values=c(poc_colors[1:2], poc_colors[4])) +
#scale_fill_discrete(guide = guide_legend(reverse = TRUE)) +
theme_bw() +
theme(text=element_text(size=26
,family="Frutiger LT Std 45 Light"
)
,axis.text.x=element_text(angle=90)
,legend.position=c(.275,.95)
,legend.justification=c(.27,.95)
)
dev.off()
tmd(code = "general_conceptual_model_flow.Rnw", k2p = FALSE)
source("tmd.R")
tmd(code = "general_conceptual_model_flow.Rnw", k2p = FALSE)
tmd(code = "general_conceptual_model_flow.Rnw", k2p = FALSE)
readPNG("general_conceptual_model_flow.png")
img <- readPNG("general_conceptual_model_flow.png")
grid.raster(img)
tmd(code = "general_conceptual_model_flow.Rnw", k2p = FALSE)
tmd(code = "general_conceptual_model_flow.Rnw")
tmd(code = "general_conceptual_model_flow.Rnw")
img <- "general_conceptual_model_flow.png"
grid.raster(readPNG(img))
dev.off()
grid.raster(readPNG(img))
require(grDevices)
rasterImage(img)
str(img)
img <- readPNG("general_conceptual_model_flow.png")
rasterImage(img)
img <- readPNG("general_conceptual_model_flow.png")
img
str(img)
rasterImage(img, 100, 300, 150, 350)
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
rasterImage(img, 100, 300, 150, 350)
img
require(png)
img <- "general_conceptual_model_flow.png"
plot(1:2, type='n', main="Plotting Over an Image", xlab="x", ylab="y")
lim <- par()
rasterImage(image, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
lim$usr[1]
rasterImage(img, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
require(png)
img <- "general_conceptual_model_flow.png"
plot(1:2, type='n', main="Plotting Over an Image", xlab="x", ylab="y")
lim <- par()
rasterImage(img, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
require(png)
img <- "general_conceptual_model_flow.png"
img <- readPNG(img)
plot(1:2, type='n', main="Plotting Over an Image", xlab="x", ylab="y")
lim <- par()
rasterImage(img, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
require(png)
img <- "general_conceptual_model_flow.png"
img <- readPNG(img)
plot(1:2, type='n', main="Plotting Over an Image", xlab="x", ylab="y")
lim <- par()
rasterImage(img, lim$usr[1], lim$usr[3], lim$usr[2], lim$usr[4])
grid()
require(png)
img <- "general_conceptual_model_flow.png"
img <- readPNG(img)
cat(paste0('\\includepdf['
,pdf_opts
,']{'
,sub("^([^.]*).*","\\1", code)
,'.pdf}'
))
pdf_opts="scale=0.8,pages={1}"
cat(paste0('\\includepdf['
,pdf_opts
,']{'
,sub("^([^.]*).*","\\1", code)
,'.pdf}'
))
code = "general_conceptual_model_flow.Rnw"
cat(paste0('\\includepdf['
,pdf_opts
,']{'
,sub("^([^.]*).*","\\1", code)
,'.pdf}'
))
require(knitr)
source("tex_convert.R")
require(Hmisc)
tex_convert(code = "general_conceptual_model_flow.Rnw")
source("tex_convert.R")
tex_convert(code = "general_conceptual_model_flow.Rnw")
dtf <- t(sapply(na.omit(x_disp), each(min, max, mean, median)))
print(dtf, sanitize.text.function = function(x){x}, scalebox=1)
?xtable
require(xtable)
?xtable
set.seed(2345)
res <- matrix(sample(0:9, size = 6*9, replace = TRUE), ncol = 6, nrow = 9)
xres <- xtable(res)
digits(xres) <- rep(0, 7)
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- c(0, 2)
addtorow$pos[[2]] <- 4
addtorow$command <- c('\vspace{2mm} \n', '\vspace{10mm} \n')
print(xres, add.to.row = addtorow, include.rownames = FALSE,
include.colnames = TRUE, only.contents = TRUE,
hline.after = c(0, 0, 9, 9))
m1 <- glm(p_all_neg ~ alpha +
log_w_ta
,family=quasibinomial
,weights=r_dat_sub$p_all_neg_d
,data=r_dat_sub)
setwd("C:/Users/mienkoja/Dropbox/qualpaper")
require(Benchmarking)
require(sqldf)
require(BMA)
#require(Amelia) # generate multiple imputations
require(mitools) # for MIextract()
require(mix) # for mi.inference()
require(ggplot2)
#require(extrafont)
require(pocr)
require(gridExtra)
require(plyr)
require(xtable)
set.seed(123456)
load("C:/Users/mienkoja/Dropbox/qualpaper/sech_out.RData")
# see page 215 from Bogetoft and Otto 2011
sfa_dat <- as.data.frame(na.omit(with(r_dat, cbind(id
,w_ta=w_ta*alpha
,t_ta=t_ta*alpha
,t_tvc
,x_c)
)
)
)
sfa_dat <- subset(sfa_dat, (is.infinite(sfa_dat$w_ta)==FALSE | is.infinite(sfa_dat$t_ta==FALSE)
)
)
sfa_dat <- subset(sfa_dat, !(sfa_dat$w_ta==0 & sfa_dat$t_ta==0))
x <- with(sfa_dat, cbind(w_ta, t_ta))
y1 <- matrix(sfa_dat$t_tvc)
y2 <- matrix(sfa_dat$x_c)
t_tvc_sfa <- sfa(log1p(x), log1p(y1))
summary(t_tvc_sfa)
#percentage of inefficiency variation to total variation
lambda <- lambda.sfa(t_tvc_sfa)
100*lambda^2/(1+lambda^2)
#variance for inefficiency
sigma2u.sfa(t_tvc_sfa)
#variance for random errors
sigma2v.sfa(t_tvc_sfa)
#residuals
e <- residuals(t_tvc_sfa)
#sigma 2
s2 <- sigma2.sfa(t_tvc_sfa)
mustar <- -e*lambda^2/(1+lambda^2)
sstar <- lambda/(1+lambda^2)*sqrt(s2)
tej <- exp(-mustar-sstar*(dnorm(mustar/sstar)/pnorm(mustar/sstar)))
tejt <- data.frame(id=sfa_dat$id, tejt=tej[1:1822])
#tejt <- data.frame(id=sfa_dat$id, tejt=tej[1:927])
r_dat <- sqldf("select
r.*
,tejt
from r_dat r
left join tejt tt
on r.id=tt.id")
#try benchmarking for x_c
x_c_sfa <- sfa(log1p(x), log1p(y2))
summary(x_c_sfa)
#percentage of inefficiency variation to total variation
lambda <- lambda.sfa(x_c_sfa)
100*lambda^2/(1+lambda^2)
#variance for inefficiency
sigma2u.sfa(x_c_sfa)
#variance for random errors
sigma2v.sfa(x_c_sfa)
#residuals
e <- residuals(x_c_sfa)
#sigma 2
s2 <- sigma2.sfa(x_c_sfa)
mustar <- -e*lambda^2/(1+lambda^2)
sstar <- lambda/(1+lambda^2)*sqrt(s2)
tej <- exp(-mustar-sstar*(dnorm(mustar/sstar)/pnorm(mustar/sstar)))
#tejx <- data.frame(id=sfa_dat$id, tejx=tej[1:927])
tejx <- data.frame(id=sfa_dat$id, tejx=tej[1:1822])
r_dat <- sqldf("select
r.*
,tejx
from r_dat r
left join tejx tx
on r.id=tx.id")
X <- with(sfa_dat, cbind(w_ta = w_ta/t_ta, t_tvc, x_c))
Y <- matrix(sfa_dat$t_ta, ncol=1)
dist <- sfa(log1p(X), -log(Y))
tedist <- te.sfa(dist)
sigma2u <- sigma2u.sfa(dist)
sigma2v <- sigma2v.sfa(dist)
te <- data.frame(id=sfa_dat$id, te=tedist)
# commented code is to possibly model te as a hyper parameter
#nsim <- 10
#nobs <- 1823
#te <- data.frame(id=rep(sfa_dat$id, nsim), te=rep(tedist, nsim))
#err <- rep(NA, nsim*nobs)
#err <- rnorm(1, mean=0, sd=sigma2v)-rnorm(1, mean=0, sd=sigma2u), nsim*nobs)
# for (i in 1:(nsim*nobs)){
#     err[i] <- rnorm(1, mean=0, sd=sigma2v)-rnorm(1, mean=0, sd=sigma2u)
# }
# te$err <- err
# te$te_sim <- te$te + te$err
#
# idx <- data.frame(j=rep(seq(1:nobs), nsim), i = rep(seq(1:nsim), nobs), tot = seq(1:(nsim*nobs)))
#
# m <- lm(tot~j+i, dat=idx)
r_dat <- sqldf("select
r.*
,te
from r_dat r
left join te te
on r.id=te.id")
r_dat_sub <- subset(r_dat
,r_dat$c_age > 18
,select = c(w_ta
,neg_count
,pos_count
,alpha
,te
,c_age
,w_ta
,cnt_ch
,m_white
,m_age
,m_mar
,m_college
,m_hi_frus
,c_health
,c_hi_health
,dev_cnc)
)
#transform some variables
r_dat_sub$te <- as.numeric(r_dat_sub$te)
r_dat_sub$log_w_ta <- log(r_dat_sub$w_ta)
r_dat_sub$log_m_age <- log(r_dat_sub$m_age)
r_dat_sub$log_c_age <- log(r_dat_sub$c_age)
#final calculation for p_all_neg
r_dat_sub$p_all_neg <- (r_dat_sub$neg_count/2)/((r_dat_sub$neg_count/2)+(r_dat_sub$pos_count/3))
r_dat_sub$p_all_neg_d <- ((r_dat_sub$neg_count/2)+(r_dat_sub$pos_count/3))
#calculate some interactions
r_dat_sub$alpha_by_log_w_ta <- r_dat_sub$alpha*log(r_dat_sub$w_ta)
r_dat_sub$te_by_log_w_ta <- r_dat_sub$te*log(r_dat_sub$w_ta)
r_dat_sub$alpha_by_te <- r_dat_sub$te*r_dat_sub$alpha
r_dat_sub$alpha_by_log_w_ta_by_te <- r_dat_sub$te*log(r_dat_sub$w_ta)*r_dat_sub$alpha
x_disp=subset(r_dat_sub, select=c(p_all_neg
,alpha
,te
,w_ta
,cnt_ch
,c_age
,m_white
,m_age
,m_mar
,m_college
,m_hi_frus
,c_hi_health
,dev_cnc))
dtf <- t(sapply(na.omit(x_disp), each(min, max, mean, median)))
colnames(dtf) <- c("Min","Max","Mean", "Median")
rownames(dtf) <- c("Probability of All Type II"
,"Altruism"
,"Efficiency"
,"Income"
,"Child Count"
,"Child Age (mos)", "White Mother", "Maternal Age", "Married Mother"
,"Maternal College", "Maternal Frustration", "Child Healthy", "Devolpmental Concerns")
dtf <- xtable(dtf, label='tabdesc',caption='Descriptive Statistics', hline.after=c(0))
align(dtf) <- "crrrr"
print(dtf, sanitize.text.function = function(x){x}, scalebox=1, type='html')
m1 <- glm(p_all_neg ~ alpha +
log_w_ta
,family=quasibinomial
,weights=r_dat_sub$p_all_neg_d
,data=r_dat_sub)
names(m1$coefficients) <- c("Intercept", "Altruism", "Income")
summary(m1)
str(summary(m1))
names(summary(m1))
dimnames(summary(m1))
names(summary(m1)$coefficients)
coefficients(summary(m1))
colnames(coefficients(summary(m1)))
colnames(coefficients(summary(m1)))
colnames(coefficients(summary(m1)))  <- c("$\\Beta{X}$", "SE", "$t$", "$p$")
m1_tbl
m1_tbl <- xtable(m1,label='tabmod',caption='Model Results', hline.after=c(0))
m1_tbl
?xtable
colnames(m1)
colnames(coefficients(summary(m1)))
str(colnames(coefficients(summary(m1))))
colnames(coefficients(summary(m1)))[1]
colnames(coefficients(summary(m1)))[1] <- "test"
kable(m1)
kable(coefficients(summary(m1)))
kable(dtf)
round(dtf, 2)
dtf
dtf <- t(sapply(na.omit(x_disp), each(min, max, mean, median)))
colnames(dtf) <- c("Min","Max","Mean", "Median")
rownames(dtf) <- c("Probability of All Type II"
,"Altruism"
,"Efficiency"
,"Income"
,"Child Count"
,"Child Age (mos)", "White Mother", "Maternal Age", "Married Mother"
,"Maternal College", "Maternal Frustration", "Child Healthy", "Devolpmental Concerns")
dtf <- xtable(dtf, label='tabdesc',caption='Descriptive Statistics', hline.after=c(0))
dtf <- t(sapply(na.omit(x_disp), each(min, max, mean, median)))
colnames(dtf) <- c("Min","Max","Mean", "Median")
rownames(dtf) <- c("Probability of All Type II"
,"Altruism"
,"Efficiency"
,"Income"
,"Child Count"
,"Child Age (mos)", "White Mother", "Maternal Age", "Married Mother"
,"Maternal College", "Maternal Frustration", "Child Healthy", "Devolpmental Concerns")
round(dtf, 2)
kable(round(coefficients(summary(m1)), 2))
?summary
summary(m1, signif.stars=TRUE)
coefficients(summary(m1, signif.stars=TRUE))
coefficients(summary(m1, signif.stars=TRUE))[,1:3]
require(knitcitations)
biblio <- read.bib("qualpaper.bib")
biblio
str(biblio)
key(biblio)
biblio[[1]]
key(biblio[[1]])
biblio[[1]]$key
require(knitcitations)
?citep
