mustar <- -e*lambda^2/(1+lambda^2)
sstar <- lambda/(1+lambda^2)*sqrt(s2)
tej <- exp(-mustar-sstar*(dnorm(mustar/sstar)/pnorm(mustar/sstar)))
#tejx <- data.frame(id=sfa_dat$id, tejx=tej[1:927])
tejx <- data.frame(id=sfa_dat$id, tejx=tej[1:1822])
r_dat <- sqldf("select
r.*
,tejx
from r_dat r
left join tejx tx
on r.id=tx.id")
X <- with(sfa_dat, cbind(w_ta = w_ta/t_ta, t_tvc, x_c))
Y <- matrix(sfa_dat$t_ta, ncol=1)
dist <- sfa(log1p(X), -log(Y))
tedist <- te.sfa(dist)
sigma2u <- sigma2u.sfa(dist)
sigma2v <- sigma2v.sfa(dist)
te <- data.frame(id=sfa_dat$id, te=tedist)
# commented code is to possibly model te as a hyper parameter
#nsim <- 10
#nobs <- 1823
#te <- data.frame(id=rep(sfa_dat$id, nsim), te=rep(tedist, nsim))
#err <- rep(NA, nsim*nobs)
#err <- rnorm(1, mean=0, sd=sigma2v)-rnorm(1, mean=0, sd=sigma2u), nsim*nobs)
# for (i in 1:(nsim*nobs)){
#     err[i] <- rnorm(1, mean=0, sd=sigma2v)-rnorm(1, mean=0, sd=sigma2u)
# }
# te$err <- err
# te$te_sim <- te$te + te$err
#
# idx <- data.frame(j=rep(seq(1:nobs), nsim), i = rep(seq(1:nsim), nobs), tot = seq(1:(nsim*nobs)))
#
# m <- lm(tot~j+i, dat=idx)
r_dat <- sqldf("select
r.*
,te
from r_dat r
left join te te
on r.id=te.id")
r_dat_sub <- subset(r_dat
,r_dat$c_age > 18
,select = c(w_ta
,neg_count
,pos_count
,alpha
,te
,c_age
,w_ta
,cnt_ch
,m_white
,m_age
,m_mar
,m_college
,m_hi_frus
,c_health
,c_hi_health
,dev_cnc)
)
#transform some variables
r_dat_sub$te <- as.numeric(r_dat_sub$te)
r_dat_sub$log_w_ta <- log(r_dat_sub$w_ta)
r_dat_sub$log_m_age <- log(r_dat_sub$m_age)
r_dat_sub$log_c_age <- log(r_dat_sub$c_age)
#final calculation for p_all_neg
r_dat_sub$p_all_neg <- (r_dat_sub$neg_count/2)/((r_dat_sub$neg_count/2)+(r_dat_sub$pos_count/3))
r_dat_sub$p_all_neg_d <- ((r_dat_sub$neg_count/2)+(r_dat_sub$pos_count/3))
#calculate some interactions
r_dat_sub$alpha_by_log_w_ta <- r_dat_sub$alpha*log(r_dat_sub$w_ta)
r_dat_sub$te_by_log_w_ta <- r_dat_sub$te*log(r_dat_sub$w_ta)
r_dat_sub$alpha_by_te <- r_dat_sub$te*r_dat_sub$alpha
r_dat_sub$alpha_by_log_w_ta_by_te <- r_dat_sub$te*log(r_dat_sub$w_ta)*r_dat_sub$alpha
x_disp=subset(r_dat_sub, select=c(p_all_neg
,alpha
,te
,w_ta
,cnt_ch
,c_age
,m_white
,m_age
,m_mar
,m_college
,m_hi_frus
,c_hi_health
,dev_cnc))
dtf <- t(sapply(na.omit(x_disp), each(min, max, mean, median)))
colnames(dtf) <- c("min","max","$\\bar{X}$", "$\\tilde{X}$")
rownames(dtf) <- c("$P(\\text{All }D_{II})$"
,"$A$"
,"$F$"
,"$y$"
,"Child Count"
,"Child Age (mos)", "White Mother", "Maternal Age", "Married Mother"
,"Maternal College", "Maternal Frustration", "Child Healthy", "Devolpmental Concerns")
dtf <- xtable(dtf, label='tabdesc',caption='Descriptive Statistics', hline.after=c(0))
align(dtf) <- "crrrr"
print(dtf, sanitize.text.function = function(x){x}, scalebox=0.8)
m1 <- glm(p_all_neg ~ alpha +
log_w_ta
,family=quasibinomial
,weights=r_dat_sub$p_all_neg_d
,data=r_dat_sub)
names(m1$coefficients) <- c("Intercept", "A", "y")
m1_tbl <- xtable(m1,label='tabmod',caption='Model Results', hline.after=c(0))
print(m1_tbl, scalebox=0.8)
sim_dat <- subset(r_dat_sub, select=c(alpha, log_w_ta))
sim_dat_w1 <- with(sim_dat
,data.frame(alpha = mean(sim_dat$alpha, na.rm=TRUE)
,log_w_ta = rep(seq(from = 4, to = 13, length.out = 1000))
)
)
sim_dat_w2 <- cbind(sim_dat_w1
,predict(m1, type="response", newdata=sim_dat_w1, se = TRUE))
sim_dat_w3 <- within(sim_dat_w2, {
LL <- fit - (1.96 * se.fit)
UL <- fit + (1.96 * se.fit)
})
sim_dat_a1 <- with(sim_dat
,data.frame(log_w_ta = mean(sim_dat$log_w_ta, na.rm=TRUE)
,alpha = rep(seq(from = 0, to = 1, length.out = 1000))
)
)
sim_dat_a2 <- cbind(sim_dat_a1
,predict(m1, type="response", newdata=sim_dat_a1, se = TRUE))
sim_dat_a3 <- within(sim_dat_a2, {
LL <- fit - (1.96 * se.fit)
UL <- fit + (1.96 * se.fit)
})
breaks=c(.40, .45, .50, .55, .60)
w_p <- ggplot(sim_dat_w3, aes(x = log_w_ta, y = fit)) +
geom_ribbon(aes(ymin = LL, ymax = UL),alpha = 0.2, fill="#294d64") +
geom_line(size = 1, colour="#294d64") +
xlab("Log of Income") +
ylab(expression(paste("P(Type II Discipline | ", A, ")"))) +
scale_y_continuous(labels = percent
#,breaks=breaks
,limits=c(0, 1)) +
theme_bw() +
theme(text=element_text(size=16, family="Frutiger LT Std 45 Light"))
w_p
a_p <- ggplot(sim_dat_a3, aes(x = alpha, y = fit)) +
geom_ribbon(aes(ymin = LL, ymax = UL),alpha = 0.2, fill="#294d64") +
geom_line(size = 1, colour="#294d64") +
xlab(expression(alpha)) +
ylab("P(Type II Discipline | log(y))") +
scale_y_continuous(labels = percent
#,breaks=breaks
,limits=c(0, 1)) +
theme_bw() +
theme(text=element_text(size=16, family="Frutiger LT Std 45 Light"))
a_p
rm(list=ls())
options(width=60)
opts_chunk$set(comment = ""
,warning=FALSE
,message=FALSE
,echo=TRUE
,tidy=FALSE
,size="small"
,fig.width=6
,fig.height=5
,fig.align = "center"
)
require(ggplot2)
require(reshape2)
require(Hmisc)
require(grid)
require(proxy)
require(RColorBrewer)
#set color pallette
cols <- brewer.pal(8,"Set1")
#Basic Utility
x <- c(1, 3, 9)
y <- c(9, 3, 1)
wb1 <- data.frame(bezier(x, y, evaluation = 500))
wb2 <- data.frame(bezier(x+1, y+1, evaluation = 500))
wb3 <- data.frame(bezier(x+2, y+2, evaluation = 500))
textAnnotations <- data.frame(label = c("w1", "w2", "w3"),
x = c(1.1, 2.1, 3.1),  # DF of line labels
y = c(9.4, 10.4, 11.4))
p1 <- qplot(x = 0:12, y = 0:12, geom = "blank")  # Draw an empty plot
p1 <- p1 + geom_path(data = wb1, aes(x = x, y = y),  # Add utility 1
size = 1, colour = cols[2])
p1 <- p1 + geom_path(data = wb2, aes(x = x, y = y),  # Add utility 2
size = 1, colour = cols[2])
p1 <- p1 + geom_path(data = wb3, aes(x = x, y = y),  # Add utility 3
size = 1, colour = cols[2])
p1 <- p1 + annotate("segment", x = 7, xend = 9, y = 7, yend = 9,  # Arrow
arrow = arrow(length = unit(3,"mm")), colour = gray(1/2))
p1 <- p1 + annotate("text",
#size=4
x = 10, y = 7,
label = "Well-Being", colour = gray(1/2),
family = "Frutiger LT Std 45 Light") #Arrow Label
p1 <- p1 + geom_text(data = textAnnotations,  # Add curve labels
aes(x = x, y = y, label = label), family="Frutiger LT Std 45 Light")
p1 <- p1 + scale_x_continuous(expression(paste("Household Produced Investments ",x[ch])))
p1 <- p1 + scale_y_continuous(expression(paste("Market Purchased Investments ",x[cm])))
p1 <- p1 + theme_classic(base_size = 15)
p1 <- p1 + coord_equal()  # Force fixed x-y relationship
p1 <- p1 + theme(axis.ticks = element_blank(), #remove numbering
axis.text.y = element_blank(),
axis.text.x = element_blank(),
text=element_text(size=16, family="Frutiger LT Std 45 Light"))
p1
#Basic Utility
x <- c(1, 3, 9)
y <- c(9, 3, 1)
wb1 <- data.frame(bezier(x, y, evaluation = 500))
wb2 <- data.frame(bezier(x+1, y+1, evaluation = 500))
wb3 <- data.frame(bezier(x+2, y+2, evaluation = 500))
textAnnotations <- data.frame(label = c("w1", "w2", "w3"),
x = c(1.1, 2.1, 3.1),  # DF of line labels
y = c(9.4, 10.4, 11.4))
p1 <- qplot(x = 0:12, y = 0:12, geom = "blank")  # Draw an empty plot
p1 <- p1 + geom_path(data = wb1, aes(x = x, y = y),  # Add utility 1
size = 1, colour = cols[2])
p1 <- p1 + geom_path(data = wb2, aes(x = x, y = y),  # Add utility 2
size = 1, colour = cols[2])
p1 <- p1 + geom_path(data = wb3, aes(x = x, y = y),  # Add utility 3
size = 1, colour = cols[2])
p1 <- p1 + annotate("segment", x = 7, xend = 9, y = 7, yend = 9,  # Arrow
arrow = arrow(length = unit(3,"mm")), colour = gray(1/2))
p1 <- p1 + annotate("text",
#size=4
x = 10, y = 7,
label = "Well-Being", colour = gray(1/2)
#,family = "Frutiger LT Std 45 Light"
) #Arrow Label
p1 <- p1 + geom_text(data = textAnnotations,  # Add curve labels
aes(x = x, y = y, label = label)
#,family="Frutiger LT Std 45 Light"
)
p1 <- p1 + scale_x_continuous(expression(paste("Household Produced Investments ",x[ch])))
p1 <- p1 + scale_y_continuous(expression(paste("Market Purchased Investments ",x[cm])))
p1 <- p1 + theme_classic(base_size = 15)
p1 <- p1 + coord_equal()  # Force fixed x-y relationship
p1 <- p1 + theme(axis.ticks = element_blank(), #remove numbering
axis.text.y = element_blank(),
axis.text.x = element_blank(),
text=element_text(size=16
#,family="Frutiger LT Std 45 Light"
))
p1
sim_dat <- subset(r_dat_sub, select=c(alpha, log_w_ta))
sim_dat_w1 <- with(sim_dat
,data.frame(alpha = mean(sim_dat$alpha, na.rm=TRUE)
,log_w_ta = rep(seq(from = 4, to = 13, length.out = 1000))
)
)
sim_dat_w2 <- cbind(sim_dat_w1
,predict(m1, type="response", newdata=sim_dat_w1, se = TRUE))
sim_dat_w3 <- within(sim_dat_w2, {
LL <- fit - (1.96 * se.fit)
UL <- fit + (1.96 * se.fit)
})
sim_dat_a1 <- with(sim_dat
,data.frame(log_w_ta = mean(sim_dat$log_w_ta, na.rm=TRUE)
,alpha = rep(seq(from = 0, to = 1, length.out = 1000))
)
)
sim_dat_a2 <- cbind(sim_dat_a1
,predict(m1, type="response", newdata=sim_dat_a1, se = TRUE))
sim_dat_a3 <- within(sim_dat_a2, {
LL <- fit - (1.96 * se.fit)
UL <- fit + (1.96 * se.fit)
})
breaks=c(.40, .45, .50, .55, .60)
w_p <- ggplot(sim_dat_w3, aes(x = log_w_ta, y = fit)) +
geom_ribbon(aes(ymin = LL, ymax = UL),alpha = 0.2, fill="#294d64") +
geom_line(size = 1, colour="#294d64") +
xlab("Log of Income") +
ylab(expression(paste("P(Type II Discipline | ", alpha, ")"))) +
scale_y_continuous(labels = percent
#,breaks=breaks
,limits=c(0, 1)) +
theme_bw() +
theme(text=element_text(size=15))
w_p
#clear memory
#rm(list=ls(all=TRUE))
setwd("C:/Users/mienkoja/Dropbox/qualpaper")
#setwd("~/Dropbox/qualpaper/")
require(Benchmarking)
require(sqldf)
require(BMA)
#require(Amelia) # generate multiple imputations
require(mitools) # for MIextract()
require(mix) # for mi.inference()
require(ggplot2)
#require(extrafont)
require(pocr)
require(gridExtra)
require(plyr)
require(xtable)
set.seed(123456)
#load("~/Dropbox/qualpaper/sech_out.RData")
load("C:/Users/mienkoja/Dropbox/qualpaper/sech_out.RData")
# see page 215 from Bogetoft and Otto 2011
sfa_dat <- as.data.frame(na.omit(with(r_dat, cbind(id
,w_ta=w_ta*alpha
,t_ta=t_ta*alpha
,t_tvc
,x_c)
)
)
)
sfa_dat <- subset(sfa_dat, (is.infinite(sfa_dat$w_ta)==FALSE | is.infinite(sfa_dat$t_ta==FALSE)
)
)
sfa_dat <- subset(sfa_dat, !(sfa_dat$w_ta==0 & sfa_dat$t_ta==0))
x <- with(sfa_dat, cbind(w_ta, t_ta))
y1 <- matrix(sfa_dat$t_tvc)
y2 <- matrix(sfa_dat$x_c)
t_tvc_sfa <- sfa(log1p(x), log1p(y1))
summary(t_tvc_sfa)
#percentage of inefficiency variation to total variation
lambda <- lambda.sfa(t_tvc_sfa)
100*lambda^2/(1+lambda^2)
#variance for inefficiency
sigma2u.sfa(t_tvc_sfa)
#variance for random errors
sigma2v.sfa(t_tvc_sfa)
#residuals
e <- residuals(t_tvc_sfa)
#sigma 2
s2 <- sigma2.sfa(t_tvc_sfa)
mustar <- -e*lambda^2/(1+lambda^2)
sstar <- lambda/(1+lambda^2)*sqrt(s2)
tej <- exp(-mustar-sstar*(dnorm(mustar/sstar)/pnorm(mustar/sstar)))
tejt <- data.frame(id=sfa_dat$id, tejt=tej[1:1822])
#tejt <- data.frame(id=sfa_dat$id, tejt=tej[1:927])
r_dat <- sqldf("select
r.*
,tejt
from r_dat r
left join tejt tt
on r.id=tt.id")
#try benchmarking for x_c
x_c_sfa <- sfa(log1p(x), log1p(y2))
summary(x_c_sfa)
#percentage of inefficiency variation to total variation
lambda <- lambda.sfa(x_c_sfa)
100*lambda^2/(1+lambda^2)
#variance for inefficiency
sigma2u.sfa(x_c_sfa)
#variance for random errors
sigma2v.sfa(x_c_sfa)
#residuals
e <- residuals(x_c_sfa)
#sigma 2
s2 <- sigma2.sfa(x_c_sfa)
mustar <- -e*lambda^2/(1+lambda^2)
sstar <- lambda/(1+lambda^2)*sqrt(s2)
tej <- exp(-mustar-sstar*(dnorm(mustar/sstar)/pnorm(mustar/sstar)))
#tejx <- data.frame(id=sfa_dat$id, tejx=tej[1:927])
tejx <- data.frame(id=sfa_dat$id, tejx=tej[1:1822])
r_dat <- sqldf("select
r.*
,tejx
from r_dat r
left join tejx tx
on r.id=tx.id")
X <- with(sfa_dat, cbind(w_ta = w_ta/t_ta, t_tvc, x_c))
Y <- matrix(sfa_dat$t_ta, ncol=1)
dist <- sfa(log1p(X), -log(Y))
tedist <- te.sfa(dist)
sigma2u <- sigma2u.sfa(dist)
sigma2v <- sigma2v.sfa(dist)
te <- data.frame(id=sfa_dat$id, te=tedist)
# commented code is to possibly model te as a hyper parameter
#nsim <- 10
#nobs <- 1823
#te <- data.frame(id=rep(sfa_dat$id, nsim), te=rep(tedist, nsim))
#err <- rep(NA, nsim*nobs)
#err <- rnorm(1, mean=0, sd=sigma2v)-rnorm(1, mean=0, sd=sigma2u), nsim*nobs)
# for (i in 1:(nsim*nobs)){
#     err[i] <- rnorm(1, mean=0, sd=sigma2v)-rnorm(1, mean=0, sd=sigma2u)
# }
# te$err <- err
# te$te_sim <- te$te + te$err
#
# idx <- data.frame(j=rep(seq(1:nobs), nsim), i = rep(seq(1:nsim), nobs), tot = seq(1:(nsim*nobs)))
#
# m <- lm(tot~j+i, dat=idx)
r_dat <- sqldf("select
r.*
,te
from r_dat r
left join te te
on r.id=te.id")
r_dat_sub <- subset(r_dat
,r_dat$c_age > 18
,select = c(w_ta
,neg_count
,pos_count
,alpha
,te
,c_age
,w_ta
,cnt_ch
,m_white
,m_age
,m_mar
,m_college
,m_hi_frus
,c_health
,c_hi_health
,dev_cnc)
)
#transform some variables
r_dat_sub$te <- as.numeric(r_dat_sub$te)
r_dat_sub$log_w_ta <- log(r_dat_sub$w_ta)
r_dat_sub$log_m_age <- log(r_dat_sub$m_age)
r_dat_sub$log_c_age <- log(r_dat_sub$c_age)
#final calculation for p_all_neg
r_dat_sub$p_all_neg <- (r_dat_sub$neg_count/2)/((r_dat_sub$neg_count/2)+(r_dat_sub$pos_count/3))
r_dat_sub$p_all_neg_d <- ((r_dat_sub$neg_count/2)+(r_dat_sub$pos_count/3))
#calculate some interactions
r_dat_sub$alpha_by_log_w_ta <- r_dat_sub$alpha*log(r_dat_sub$w_ta)
r_dat_sub$te_by_log_w_ta <- r_dat_sub$te*log(r_dat_sub$w_ta)
r_dat_sub$alpha_by_te <- r_dat_sub$te*r_dat_sub$alpha
r_dat_sub$alpha_by_log_w_ta_by_te <- r_dat_sub$te*log(r_dat_sub$w_ta)*r_dat_sub$alpha
x_disp=subset(r_dat_sub, select=c(p_all_neg
,alpha
,te
,w_ta
,cnt_ch
,c_age
,m_white
,m_age
,m_mar
,m_college
,m_hi_frus
,c_hi_health
,dev_cnc))
dtf <- t(sapply(na.omit(x_disp), each(min, max, mean, median)))
colnames(dtf) <- c("min","max","$\\bar{X}$", "$\\tilde{X}$")
rownames(dtf) <- c("$P(\\text{All }D_{II})$"
,"$A$"
,"$F$"
,"$y$"
,"Child Count"
,"Child Age (mos)", "White Mother", "Maternal Age", "Married Mother"
,"Maternal College", "Maternal Frustration", "Child Healthy", "Devolpmental Concerns")
dtf <- xtable(dtf, label='tabdesc',caption='Descriptive Statistics', hline.after=c(0))
align(dtf) <- "crrrr"
print(dtf, sanitize.text.function = function(x){x}, scalebox=0.8)
m1 <- glm(p_all_neg ~ alpha +
log_w_ta
,family=quasibinomial
,weights=r_dat_sub$p_all_neg_d
,data=r_dat_sub)
names(m1$coefficients) <- c("Intercept", "A", "y")
m1_tbl <- xtable(m1,label='tabmod',caption='Model Results', hline.after=c(0))
print(m1_tbl, scalebox=0.8)
sim_dat <- subset(r_dat_sub, select=c(alpha, log_w_ta))
sim_dat_w1 <- with(sim_dat
,data.frame(alpha = mean(sim_dat$alpha, na.rm=TRUE)
,log_w_ta = rep(seq(from = 4, to = 13, length.out = 1000))
)
)
sim_dat_w2 <- cbind(sim_dat_w1
,predict(m1, type="response", newdata=sim_dat_w1, se = TRUE))
sim_dat_w3 <- within(sim_dat_w2, {
LL <- fit - (1.96 * se.fit)
UL <- fit + (1.96 * se.fit)
})
sim_dat_a1 <- with(sim_dat
,data.frame(log_w_ta = mean(sim_dat$log_w_ta, na.rm=TRUE)
,alpha = rep(seq(from = 0, to = 1, length.out = 1000))
)
)
sim_dat_a2 <- cbind(sim_dat_a1
,predict(m1, type="response", newdata=sim_dat_a1, se = TRUE))
sim_dat_a3 <- within(sim_dat_a2, {
LL <- fit - (1.96 * se.fit)
UL <- fit + (1.96 * se.fit)
})
breaks=c(.40, .45, .50, .55, .60)
w_p <- ggplot(sim_dat_w3, aes(x = log_w_ta, y = fit)) +
geom_ribbon(aes(ymin = LL, ymax = UL),alpha = 0.2, fill="#294d64") +
geom_line(size = 1, colour="#294d64") +
xlab("Log of Income") +
ylab(expression(paste("P(Type II Discipline | ", alpha, ")"))) +
scale_y_continuous(labels = percent
#,breaks=breaks
,limits=c(0, 1)) +
theme_bw() +
theme(text=element_text(size=15))
w_p
a_p <- ggplot(sim_dat_a3, aes(x = alpha, y = fit)) +
geom_ribbon(aes(ymin = LL, ymax = UL),alpha = 0.2, fill=col[2]) +
geom_line(size = 1, colour=cols[2]) +
xlab("A") +
ylab("P(Type II Discipline | y)") +
scale_y_continuous(labels = percent
#,breaks=breaks
,limits=c(0, 1)) +
theme_bw() +
theme(text=element_text(size=15))
a_p
a_p <- ggplot(sim_dat_a3, aes(x = alpha, y = fit)) +
geom_ribbon(aes(ymin = LL, ymax = UL),alpha = 0.2, fill=cols[2]) +
geom_line(size = 1, colour=cols[2]) +
xlab("A") +
ylab("P(Type II Discipline | y)") +
scale_y_continuous(labels = percent
#,breaks=breaks
,limits=c(0, 1)) +
theme_bw() +
theme(text=element_text(size=15))
a_p
